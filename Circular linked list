#include <stdio.h>
#include <stdlib.h>

struct Node
{
    int data;
    struct Node *next;
}*head=NULL;

//create a circular linked list
void create(int A[], int n)
{
    struct Node *t,*last;
    int i;
    head=(struct Node *)malloc(sizeof(struct Node));
    head->data=A[0];
    head->next=head;
    last=head;
 
        for(i=1;i<n;i++)
        {
            t=(struct Node *)malloc(sizeof(struct Node));
            t->data=A[i];
            t->next=last->next;
            last->next=t;
            last=t;
        }
    
}

//displaying a circular linked list
void display(struct Node *p)
{
    do
    {
       printf("%d-> ",p->data);
       p=p->next;
    }while(p!=head);
}

//recursive display of elements
void Rdisplay(struct Node *p)
{
    static int flag=0;
    if(p!=head || flag==0)
    {
        flag=1;
        printf("%d-> ",p->data);
        p=p->next;
        Rdisplay(p);
    }
    flag=0;
}

//count the number of elements
int count(struct Node *p)
{
    int c=0;
    do{
        c++;
        p=p->next;
    }while(p!=head);
    return c;
}

//inserting an elements
void insert(struct Node *p,int index, int x)
{
    struct Node *t;
    if(index<0 || index>count(head))
    {
        return;
    }
    if(index==1)
    {
        if(head==NULL)
        {
            t=(struct Node *)malloc(sizeof(struct Node));
            
        }
    }
}

//deleting elements
int delete(struct Node *p,int index)
{
    int i,x;
    struct Node *q;
    if(index<0 || index>count(head))
    {
        return -1;
    }
    if(index==1)
    {
        while(p->next!=head)
        {
            p=p->next;
        }
        x=head->data;
        if(head==p)
        {
            free(head);
            head=NULL;
        }
        else
        {
            p->next=head->next;
            free(head);
            head=p->next;
        }
    }  
    else
        {
          for(i=0;i<index-2;i++)
          p=p->next;
          q=p->next;
          p->next=q->next;
          x=q->data;
          free(q);
        }
        return x;
}

void main()
{
    int A[]={3,44,23,91,5};
    create(A,5);
    delete(head,2);
    display(head);
}
